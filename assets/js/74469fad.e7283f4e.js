"use strict";(self.webpackChunk_0_l_documentation=self.webpackChunk_0_l_documentation||[]).push([[6597],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),m=o,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2733:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:3,sidebar_label:"Restore",description:"Restore and sync the OL Network database to the current state"},i="Restore",l={unversionedId:"validators/restore",id:"validators/restore",title:"Restore",description:"Restore and sync the OL Network database to the current state",source:"@site/docs/validators/restore.md",sourceDirName:"validators",slug:"/validators/restore",permalink:"/validators/restore",draft:!1,editUrl:"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/validators/restore.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Restore",description:"Restore and sync the OL Network database to the current state"},sidebar:"tutorialSidebar",previous:{title:"Running a Validator",permalink:"/validators/running-a-validator"},next:{title:"Register",permalink:"/validators/register"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Setup",id:"setup",level:3},{value:"Restoring to the latest version of the 0L Network public backup",id:"restoring-to-the-latest-version-of-the-0l-network-public-backup",level:3},{value:"Sync as a Full Node",id:"sync-as-a-full-node",level:3},{value:"Start",id:"start",level:3}],c={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"restore"},"Restore"),(0,o.kt)("p",null,"Restore the Database to be up to date with the current state of the Network. Repository is located ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0LNetworkCommunity/epoch-archive-testnet"},"here")," and contains other useful commands out this scope."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"This guide is referencing the REX testnet as we develop the ",(0,o.kt)("inlineCode",{parentName:"p"},"libra-framework")," software for v6.9.x (soon v7)")),(0,o.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"You will need an account and libra configuration to use this tool"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"# Create account\nlibra wallet keygen\n\n#Initialize configuration\nlibra config init\n"))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The Makefile is designed for libra-framework v6.9.x (soon v7) Ensure you are using the correct version.")),(0,o.kt)("h3",{id:"setup"},"Setup"),(0,o.kt)("p",null,"  Clone the repo and prepare the binary:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd ~\ngit clone https://github.com/0LNetworkCommunity/epoch-archive-testnet\ncd ~/epoch-archive-testnet\nmake bins\n")),(0,o.kt)("h3",{id:"restoring-to-the-latest-version-of-the-0l-network-public-backup"},"Restoring to the latest version of the 0L Network public backup"),(0,o.kt)("p",null,"This is most likely all you will need to restore and start/resume syncing:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  cd ~/epoch-archive-testnet\n  make wipe-db && make restore-all\n")),(0,o.kt)("h3",{id:"sync-as-a-full-node"},"Sync as a Full Node"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"You will need to open port ",(0,o.kt)("inlineCode",{parentName:"p"},"6182")," and also verify your seed peers in the yaml")),(0,o.kt)("p",null,"Currently you need to sync as a full node. To do that you need to add the contents of ",(0,o.kt)("a",{parentName:"p",href:"/validators/yaml-templates/fullnode-yaml"},"fullnode.yaml")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.libra/fullnode.yaml")),(0,o.kt)("p",null,"You will need to change the file to point at the correct locations for your database and genesis blob. By default these will be ",(0,o.kt)("inlineCode",{parentName:"p"},"~/$USER/.libra/db")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"~/$USER/.libra/genesis/genesis.blog")," respectfully."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"data_dir: /change/to/your/db/dir\n\ngenesis_file_location: /path/to/your/genesis/blob\n\n\n")),(0,o.kt)("h3",{id:"start"},"Start"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"libra node --config-path ~/.libra/fullnode.yaml")))}d.isMDXComponent=!0}}]);