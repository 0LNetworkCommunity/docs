"use strict";(self.webpackChunk_0_l_documentation=self.webpackChunk_0_l_documentation||[]).push([[122],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),d=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(n),s=a,y=p["".concat(u,".").concat(s)]||p[s]||m[s]||o;return n?r.createElement(y,i(i({ref:t},c),{},{components:n})):r.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=s;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},1341:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=n(7462),a=(n(7294),n(3905));const o={title:"Validator yaml example",id:"validator-yaml"},i="Validator YAML File Example",l={unversionedId:"Tools/node/validator-yaml",id:"Tools/node/validator-yaml",title:"Validator yaml example",description:"validator.yaml",source:"@site/docs/Tools/node/validator-yaml.md",sourceDirName:"Tools/node",slug:"/Tools/node/validator-yaml",permalink:"/documentation/Tools/node/validator-yaml",draft:!1,editUrl:"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/Tools/node/validator-yaml.md",tags:[],version:"current",frontMatter:{title:"Validator yaml example",id:"validator-yaml"},sidebar:"tutorialSidebar",previous:{title:"Fullnode yaml example",permalink:"/documentation/Tools/node/fullnode-yaml"},next:{title:"Tower",permalink:"/documentation/Tools/tower/"}},u={},d=[],c={toc:d},p="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"validator-yaml-file-example"},"Validator YAML File Example"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"validator.yaml")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"base:\n  role: 'validator'\n  data_dir: '/home/ubuntu/.libra/data'\n  waypoint:\n    from_file: '/home/ubuntu/.libra/genesis/waypoint.txt'\n\nconsensus:\n  safety_rules:\n    service:\n      type: 'local'\n    backend:\n      type: 'on_disk_storage'\n      path: secure-data.json\n      namespace: ~\n    initial_safety_rules_config:\n      from_file:\n        waypoint:\n          from_file: /home/ubuntu/.libra/genesis/waypoint.txt\n        identity_blob_path: /home/ubuntu/.libra/validator-identity.yaml\n\nexecution:\n  genesis_file_location: '/home/ubuntu/.libra/genesis/genesis.blob'\n\nvalidator_network:\n  discovery_method: 'onchain'\n  mutual_authentication: true\n  identity:\n    type: 'from_file'\n    path: /home/ubuntu/.libra/validator-identity.yaml\n\nfull_node_networks:\n- network_id:\n    private: 'vfn'\n  listen_address: '/ip4/0.0.0.0/tcp/6181'\n  identity:\n    type: 'from_file'\n    path: /home/ubuntu/.libra/validator-identity.yaml\n\napi:\n  enabled: true\n  address: '0.0.0.0:8080'\n")))}m.isMDXComponent=!0}}]);